// TODO: After study to add the unicorn plugin (eslint-plugin-unicorn) that have a catch-all for 200+ extra best practices: here's how I'm going to add this:

// "plugins": [
//   /* … */,
// + "unicorn"
// ],
// "extends": [
//   /* … */,
// + "plugin:unicorn/recommended"
// ],

{
  "root": true,
  "env": {
    "browser": true,
    "es2021": true
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "tsx": true
    },
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": "./tsconfig.json"
  },
  "plugins": [
    "@typescript-eslint",
    "react",
    "react-hooks",
    "react-refresh",
    "simple-import-sort"
  ],
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:react-refresh/recommended",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:import/typescript"
  ],
  "rules": {
    // Start with minimal rules (add gradually)
    "react/react-in-jsx-scope": "off", // Not needed in React 17+
    "@typescript-eslint/no-explicit-any": "warn", // Start as warning
    "no-console": "warn",
    "react-hooks/exhaustive-deps": "warn",
    "@typescript-eslint/no-unused-vars": "warn",
    "@typescript-eslint/consistent-type-imports": "warn",
    "@typescript-eslint/no-floating-promises": "warn",
    "@typescript-eslint/strict-boolean-expressions": "warn",
    "@typescript-eslint/no-unnecessary-boolean-literal-compare": "warn",
    "@typescript-eslint/no-non-null-assertion": "warn",
    "@typescript-eslint/prefer-readonly": "warn",
    "@typescript-eslint/prefer-readonly-parameter-types": "off", // opt‑in
    "@typescript-eslint/prefer-nullish-coalescing": "warn",
    "@typescript-eslint/prefer-optional-chain": "warn",
    "@typescript-eslint/consistent-type-definitions": ["warn", "interface"],
    "@typescript-eslint/explicit-function-return-type": [
      "warn",
      { "allowExpressions": true }
    ],
    "eqeqeq": ["error", "smart"],
    "curly": ["error", "all"],
    "no-var": "error",
    "prefer-const": "error",
    "no-shadow": "warn",
    "consistent-return": "warn",
    "no-implicit-coercion": ["warn", { "boolean": false }],
    "no-param-reassign": ["warn", { "props": false }],
    "simple-import-sort/imports": "warn",
    "simple-import-sort/exports": "warn",
    "import/no-cycle": ["error", { "maxDepth": 1 }],
    "import/no-duplicates": "error",
    "import/newline-after-import": ["warn", { "count": 1 }],
    "@typescript-eslint/ban-types": [
      "warn",
      {
        "extendDefaults": true,
        "types": {
          "{}": false // We can customize it if neeeded
        }
      }
    ]
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  }
}
